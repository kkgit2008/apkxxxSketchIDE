name: Android Build with flutter

##To build from subfolder,just modify the 'ANDROID_DIR'

on:
  push:
#    branches: [ "main","master","dev","release" ]
#    ##Start build only on these branches
  workflow_dispatch:
#  ##Support manual build in 'Actions/workflow'

env:
  ANDROID_DIR: android
#  ##Build from 'android' folder (when 'app' folder is in 'project/android' folder), modify it as you need.

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout code
        uses: actions/checkout@v4

#      ## 设置 Flutter 环境
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.8'
          channel: 'stable'
          cache: true

#      ## 调试 - 彻底清理并初始化
#      - name: Reset project
#        ## 确保在项目根目录执行
#        working-directory: .
#        run: |
#          flutter clean
#          rm -rf .dart_tool pubspec.lock
#          echo ">>clean finished"

#      ## 生成 local.properties 并设置 flutter.sdk
      - name: Configure Flutter SDK path
        working-directory: ${{ env.ANDROID_DIR }}
        run: |
          echo "flutter.sdk=$FLUTTER_ROOT" > local.properties
#          ## 将sdk路径写入文件
          cat local.properties
#          ## 打印文件内容

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties', '**/build.gradle') }}

      - name: Increase Gradle memory
        working-directory: ${{ env.ANDROID_DIR }}
        run: |
          printf "\norg.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=1g\n" >> gradle.properties

      - name: Make gradlew executable
        working-directory: ${{ env.ANDROID_DIR }}
        run: |
          if [ ! -f "gradlew" ]; then gradle wrapper; fi
          chmod +x gradlew

      - name: Setup Flutter plugins
        run: |
#          ## 获取所有依赖项并生成'.dart_tool/package_config.json'文件
          flutter pub get || exit 1
#          ## 添加Flutter官方提供的国际化语言支持库
          flutter pub add flutter_localizations --sdk=flutter || exit 1
#          ## 升级所有依赖包到最新兼容版本
          flutter pub upgrade || exit 1

      - name: Prepare Flutter
        run: |
#          ## 详细检查Flutter开发环境状态
          flutter doctor -v
#          ## 显式启用Android平台支持，防止出现未知问题
          flutter config --enable-android
#          ## 预下载Android平台所需的二进制文件和工具链，减少后续构建时间
          flutter precache --android

      - name: Build ${{ matrix.build_type }} APK
        working-directory: ${{ env.ANDROID_DIR }}
        run: |
          build_type=${{ matrix.build_type }}
          ./gradlew assemble${build_type^}

      - name: Show apk paths
        run: |
            echo ">>./build/app/outputs/flutter-apk:"
            ls -la ./build/app/outputs/flutter-apk

      - name: Copy ${{ matrix.build_type }} APK
        run: |
            cp ./build/app/outputs/flutter-apk/*.apk ./

      - name: Upload ${{ matrix.build_type }} APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-${{ matrix.build_type }}
          path: app-${{ matrix.build_type }}.apk