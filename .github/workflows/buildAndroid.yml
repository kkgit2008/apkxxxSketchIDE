name: Android Build with SHA256

##To build from subfolder,just modify the 'ANDROID_DIR'

on:
  push:
    #branches: [ "main","master","dev","release" ]
    ##Start build only on these branches
  workflow_dispatch:
  ##Support manual build in 'Actions/workflow'

env:
  #ANDROID_DIR: .
  ##Build from project root (when 'app' folder is just at project root)
  ANDROID_DIR: android
  ##Build from 'android' folder (when 'app' folder is in 'project/android' folder), modify it as you need.

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/gradle-wrapper.properties', '**/build.gradle') }}

#      - name: Increase Gradle memory
#        working-directory: ${{ env.ANDROID_DIR }}
#        run: |
#          printf "\norg.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=1g\n" >> gradle.properties

      - name: Make gradlew executable
        working-directory: ${{ env.ANDROID_DIR }}
        run: |
          if [ ! -f "gradlew" ]; then gradle wrapper; fi
          chmod +x gradlew

      - name: Build ${{ matrix.build_type }} APK
        working-directory: ${{ env.ANDROID_DIR }}
        run: |
          build_type=${{ matrix.build_type }}
          ./gradlew assemble${build_type^}

      - name: Show apk paths
        run: |
            echo ">>${{ env.ANDROID_DIR }}/app/build/outputs/apk/${{ matrix.build_type }}:"
            ls -la ${{ env.ANDROID_DIR }}/app/build/outputs/apk/${{ matrix.build_type }}
            # flutter apk
            # echo ">>./build/app/outputs/flutter-apk:"
            # ls -la ./build/app/outputs/flutter-apk

      - name: Copy ${{ matrix.build_type }} APK
        run: |
          cp ${{ env.ANDROID_DIR }}/app/build/outputs/apk/${{ matrix.build_type }}/*.apk ./
          # flutter apk
          # cp ./build/app/outputs/flutter-apk/*.apk ./

      - name: Upload ${{ matrix.build_type }} APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-${{ matrix.build_type }}
          path: app-${{ matrix.build_type }}.apk
